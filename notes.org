* Notes
<2022-10-20 Thu 15:54>: I ran these commands to install the related dependencies and to set up this lab accordingly:
#+begin_src bash
bundle install

samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-rails-route-params-readme $ rails db:migrate db:seed
== 20210430191324 CreateCheeses: migrating ====================================
-- create_table(:cheeses)
   -> 0.0021s
== 20210430191324 CreateCheeses: migrated (0.0021s) ===========================

ðŸ§€ Seeding cheeses...
âœ… Done seeding
#+end_src

The general gist of adding a dynamic route is to use the ':param_name' in the route itself:
- Ex:
#+begin_src ruby
get "/cheeses/:id", to: "cheeses#show"
#+end_src

A route is dynamic if a user can provide a URL parameter via the 'params' hash.

You can provide the URL parameter by using the ':param_name' accordingly via the syntax above.

You can also obtain a value of a parameter inside the controller by using .find() along with the 'params' hash as well as the corresponding key you are looking for, ex: "id".

With this in mind, I started this lab by first creating a new dynamic route that corresponded to the ':id' symbol provided by the user within a URL parameter value in the 'config/routes.rb' routes file:
#+begin_src ruby
Rails.application.routes.draw do
  get '/cheeses', to: 'cheeses#index'
  get "/cheeses/:id", to: "cheeses#show"
end
#+end_src

I then modified the contents of the '/app/controllers/cheeses_controller.rb' controller file to include a 'show' method with a 'byebug' section so that I learn more about how it works via Ruby's backend debugger:
#+begin_src ruby
class CheesesController < ApplicationController

  def index
    cheeses = Cheese.all
    render json: cheeses
  end

  def show
    byebug
  end

end
#+end_src

The lab's explanation pretty much had me look at the existing rspec test... which kind of defeats the purpose so I moved onward. Basically, I added the actual 'show' method in the 'app/controllers/cheeses_controller.rb' controller file by adding the following file contents:
#+begin_src ruby
class CheesesController < ApplicationController

  def index
    cheeses = Cheese.all
    render json: cheeses
  end

  def show
    # byebug
    cheese = Cheese.find(params[:id])
    render json: cheese
  end
end
#+end_src

I then visited the 'http://127.0.0.1:3000/cheeses/1' URL in a web browser, and was presented with the following JSON response specific to the 'cheese' with the 'id' value of '1':
#+begin_src json
{
  "id": 1,
  "name": "Cheddar",
  "price": 3,
  "is_best_seller": true,
  "created_at": "2022-10-20T20:55:15.970Z",
  "updated_at": "2022-10-20T20:55:15.970Z"
}
#+end_src
